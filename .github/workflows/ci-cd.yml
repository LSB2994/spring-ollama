name: LLAMA & DEPLOY

on:
  push:
    branches:
      - develop

env:
  APP_NAME: "spring-ollama"          # Your JAR name (without version)
  DEPLOY_DIR: "/home/lsb/spring-ollama" # Where to deploy on server

jobs:
  build-deploy:
    name: Build & Deploy
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 21

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean bootJar
          ls -la build/libs/  # Verify JAR file

      - name: Deploy new JAR
        run: |
          mkdir -p ${{ env.DEPLOY_DIR }}
          cp build/libs/*.jar ${{ env.DEPLOY_DIR }}
          
      - name: Start Application
        run: |
          # Stop any existing instance
          pkill -f "java -jar ${{ env.DEPLOY_DIR }}/*.jar" || true
          sleep 2
          
          # Start new instance with debug info
          nohup java -jar "${{ env.DEPLOY_DIR }}/*.jar" > app.log 2>&1 &
          echo $! > app.pid  # Save PID
          sleep 10  # Warm-up time

      - name: Verify Running
        run: |
          # Check process
          if ! ps -p $(cat app.pid) > /dev/null; then
            echo "::error::Process died!"
            cat app.log
            exit 1
          fi

          # Check HTTP endpoint (adjust port/endpoint as needed)
          HEALTH_CHECK="http://172.27.184.67:8080"
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" $HEALTH_CHECK || echo "000")
          
          if [ "$RESPONSE" -ne 200 ]; then
            echo "::error::Health check failed (HTTP $RESPONSE)"
            cat app.log
            exit 1
          fi
          echo "âœ“ Verified JAR is working (HTTP 200)"

      - name: Show Logs
        if: always()
        run: |
          echo "=== Last 50 lines of logs ==="
          tail -n 50 app.log
      - name: Unit Tests
        run: |
          chmod +x ./gradlew
          ./gradlew clean bootJar --info
